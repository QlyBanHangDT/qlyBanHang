#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDT_LK")]
	public partial class QlyBanHangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCAUHINH(CAUHINH instance);
    partial void UpdateCAUHINH(CAUHINH instance);
    partial void DeleteCAUHINH(CAUHINH instance);
    partial void InsertTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void UpdateTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void DeleteTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void InsertCHITIETHD(CHITIETHD instance);
    partial void UpdateCHITIETHD(CHITIETHD instance);
    partial void DeleteCHITIETHD(CHITIETHD instance);
    partial void InsertCHITIETPN(CHITIETPN instance);
    partial void UpdateCHITIETPN(CHITIETPN instance);
    partial void DeleteCHITIETPN(CHITIETPN instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDONGIA(DONGIA instance);
    partial void UpdateDONGIA(DONGIA instance);
    partial void DeleteDONGIA(DONGIA instance);
    partial void InsertGRTK(GRTK instance);
    partial void UpdateGRTK(GRTK instance);
    partial void DeleteGRTK(GRTK instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertIMEICODE(IMEICODE instance);
    partial void UpdateIMEICODE(IMEICODE instance);
    partial void DeleteIMEICODE(IMEICODE instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void UpdateNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void DeleteNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void UpdateQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void DeleteQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHONGKECMT(THONGKECMT instance);
    partial void UpdateTHONGKECMT(THONGKECMT instance);
    partial void DeleteTHONGKECMT(THONGKECMT instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    #endregion
		
		public QlyBanHangDataContext() : 
				base(global::DTO.Properties.Settings.Default.QLDT_LKConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QlyBanHangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QlyBanHangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QlyBanHangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QlyBanHangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CAUHINH> CAUHINHs
		{
			get
			{
				return this.GetTable<CAUHINH>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this.GetTable<THONGTINTAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this.GetTable<CHITIETHD>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this.GetTable<CHITIETPN>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DONGIA> DONGIAs
		{
			get
			{
				return this.GetTable<DONGIA>();
			}
		}
		
		public System.Data.Linq.Table<GRTK> GRTKs
		{
			get
			{
				return this.GetTable<GRTK>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<IMEICODE> IMEICODEs
		{
			get
			{
				return this.GetTable<IMEICODE>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this.GetTable<QL_PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THONGKECMT> THONGKECMTs
		{
			get
			{
				return this.GetTable<THONGKECMT>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChiTietDonHang_kh")]
		public ISingleResult<sp_ChiTietDonHang_khResult> sp_ChiTietDonHang_kh([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string idKH)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idKH);
			return ((ISingleResult<sp_ChiTietDonHang_khResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddAcc")]
		public ISingleResult<sp_AddAccResult> sp_AddAcc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pw, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string hoTen, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ngSinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(5)")] string gioiTinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(11)")] string sdt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dChi, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(2)")] string cdGr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, pw, hoTen, ngSinh, gioiTinh, email, sdt, dChi, cdGr);
			return ((ISingleResult<sp_AddAccResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddAcc_KH")]
		public ISingleResult<sp_AddAcc_KHResult> sp_AddAcc_KH([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string hoTen, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ngSinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(5)")] string gioiTinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(11)")] string sdt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dChi)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hoTen, ngSinh, gioiTinh, email, sdt, dChi);
			return ((ISingleResult<sp_AddAcc_KHResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChangeAcc")]
		public ISingleResult<sp_ChangeAccResult> sp_ChangeAcc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pw)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, pw);
			return ((ISingleResult<sp_ChangeAccResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_PhanQuyen", IsComposable=true)]
		public IQueryable<fn_PhanQuyenResult> fn_PhanQuyen([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idGR)
		{
			return this.CreateMethodCallQuery<fn_PhanQuyenResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idGR);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddCauHinh")]
		public ISingleResult<sp_AddCauHinhResult> sp_AddCauHinh([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string tenSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string tenCH, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string noiDungCH)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenSP, tenCH, noiDungCH);
			return ((ISingleResult<sp_AddCauHinhResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddSP")]
		public ISingleResult<sp_AddSPResult> sp_AddSP([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string tenSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string tenHang, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> gia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string nxs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string urlImage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenLSP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenSP, tenHang, gia, nxs, urlImage, tenLSP);
			return ((ISingleResult<sp_AddSPResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDSP", IsComposable=true)]
		public string fn_autoIDSP()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddHD")]
		public ISingleResult<sp_AddHDResult> sp_AddHD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string maHD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenKH, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenNV, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string soIMEI)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maHD, tenKH, tenNV, soIMEI);
			return ((ISingleResult<sp_AddHDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMaHD")]
		public int sp_GetMaHD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string maHD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maHD);
			maHD = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddPN")]
		public ISingleResult<sp_AddPNResult> sp_AddPN([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string maPN, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(60)")] string tenNCC, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenNV, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string soIMEI)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maPN, tenNCC, tenNV, soIMEI);
			return ((ISingleResult<sp_AddPNResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAUHINH")]
	public partial class CAUHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_SP;
		
		private string _TENCAUHINH;
		
		private string _NOIDUNGCAUHINH;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnTENCAUHINHChanging(string value);
    partial void OnTENCAUHINHChanged();
    partial void OnNOIDUNGCAUHINHChanging(string value);
    partial void OnNOIDUNGCAUHINHChanged();
    #endregion
		
		public CAUHINH()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5)")]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCAUHINH", DbType="NVarChar(30)")]
		public string TENCAUHINH
		{
			get
			{
				return this._TENCAUHINH;
			}
			set
			{
				if ((this._TENCAUHINH != value))
				{
					this.OnTENCAUHINHChanging(value);
					this.SendPropertyChanging();
					this._TENCAUHINH = value;
					this.SendPropertyChanged("TENCAUHINH");
					this.OnTENCAUHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNGCAUHINH", DbType="NVarChar(100)")]
		public string NOIDUNGCAUHINH
		{
			get
			{
				return this._NOIDUNGCAUHINH;
			}
			set
			{
				if ((this._NOIDUNGCAUHINH != value))
				{
					this.OnNOIDUNGCAUHINHChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNGCAUHINH = value;
					this.SendPropertyChanged("NOIDUNGCAUHINH");
					this.OnNOIDUNGCAUHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CAUHINH", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CAUHINHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CAUHINHs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINTAIKHOAN")]
	public partial class THONGTINTAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGSINH;
		
		private System.Nullable<bool> _GTINH;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private string _DCHI;
		
		private string _ID_TAIKHOAN;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGSINHChanged();
    partial void OnGTINHChanging(System.Nullable<bool> value);
    partial void OnGTINHChanged();
    partial void OnNGTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGTAOChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnID_TAIKHOANChanging(string value);
    partial void OnID_TAIKHOANChanged();
    #endregion
		
		public THONGTINTAIKHOAN()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGSINH
		{
			get
			{
				return this._NGSINH;
			}
			set
			{
				if ((this._NGSINH != value))
				{
					this.OnNGSINHChanging(value);
					this.SendPropertyChanging();
					this._NGSINH = value;
					this.SendPropertyChanged("NGSINH");
					this.OnNGSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTINH", DbType="Bit")]
		public System.Nullable<bool> GTINH
		{
			get
			{
				return this._GTINH;
			}
			set
			{
				if ((this._GTINH != value))
				{
					this.OnGTINHChanging(value);
					this.SendPropertyChanging();
					this._GTINH = value;
					this.SendPropertyChanged("GTINH");
					this.OnGTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this.OnNGTAOChanging(value);
					this.SendPropertyChanging();
					this._NGTAO = value;
					this.SendPropertyChanged("NGTAO");
					this.OnNGTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TAIKHOAN", DbType="VarChar(15)")]
		public string ID_TAIKHOAN
		{
			get
			{
				return this._ID_TAIKHOAN;
			}
			set
			{
				if ((this._ID_TAIKHOAN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._ID_TAIKHOAN = value;
					this.SendPropertyChanged("ID_TAIKHOAN");
					this.OnID_TAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_TAIKHOAN", ThisKey="ID_TAIKHOAN", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.THONGTINTAIKHOANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.THONGTINTAIKHOANs.Add(this);
						this._ID_TAIKHOAN = value.ID;
					}
					else
					{
						this._ID_TAIKHOAN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHD")]
	public partial class CHITIETHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_HD;
		
		private System.Nullable<int> _ID_IMEI;
		
		private System.Nullable<double> _DONGIA;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<IMEICODE> _IMEICODE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_HDChanging(string value);
    partial void OnID_HDChanged();
    partial void OnID_IMEIChanging(System.Nullable<int> value);
    partial void OnID_IMEIChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._IMEICODE = default(EntityRef<IMEICODE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HD
		{
			get
			{
				return this._ID_HD;
			}
			set
			{
				if ((this._ID_HD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDChanging(value);
					this.SendPropertyChanging();
					this._ID_HD = value;
					this.SendPropertyChanged("ID_HD");
					this.OnID_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_IMEI", DbType="Int")]
		public System.Nullable<int> ID_IMEI
		{
			get
			{
				return this._ID_IMEI;
			}
			set
			{
				if ((this._ID_IMEI != value))
				{
					if (this._IMEICODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_IMEIChanging(value);
					this.SendPropertyChanging();
					this._ID_IMEI = value;
					this.SendPropertyChanged("ID_IMEI");
					this.OnID_IMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_HOADON", ThisKey="ID_HD", OtherKey="ID", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_HD = value.ID;
					}
					else
					{
						this._ID_HD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMEICODE_CHITIETHD", Storage="_IMEICODE", ThisKey="ID_IMEI", OtherKey="ID", IsForeignKey=true)]
		public IMEICODE IMEICODE
		{
			get
			{
				return this._IMEICODE.Entity;
			}
			set
			{
				IMEICODE previousValue = this._IMEICODE.Entity;
				if (((previousValue != value) 
							|| (this._IMEICODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IMEICODE.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._IMEICODE.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_IMEI = value.ID;
					}
					else
					{
						this._ID_IMEI = default(Nullable<int>);
					}
					this.SendPropertyChanged("IMEICODE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPN")]
	public partial class CHITIETPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_PN;
		
		private System.Nullable<int> _ID_IMEI;
		
		private System.Nullable<double> _DONGIA;
		
		private EntityRef<IMEICODE> _IMEICODE;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_PNChanging(string value);
    partial void OnID_PNChanged();
    partial void OnID_IMEIChanging(System.Nullable<int> value);
    partial void OnID_IMEIChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETPN()
		{
			this._IMEICODE = default(EntityRef<IMEICODE>);
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PN
		{
			get
			{
				return this._ID_PN;
			}
			set
			{
				if ((this._ID_PN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PNChanging(value);
					this.SendPropertyChanging();
					this._ID_PN = value;
					this.SendPropertyChanged("ID_PN");
					this.OnID_PNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_IMEI", DbType="Int")]
		public System.Nullable<int> ID_IMEI
		{
			get
			{
				return this._ID_IMEI;
			}
			set
			{
				if ((this._ID_IMEI != value))
				{
					if (this._IMEICODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_IMEIChanging(value);
					this.SendPropertyChanging();
					this._ID_IMEI = value;
					this.SendPropertyChanged("ID_IMEI");
					this.OnID_IMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMEICODE_CHITIETPN", Storage="_IMEICODE", ThisKey="ID_IMEI", OtherKey="ID", IsForeignKey=true)]
		public IMEICODE IMEICODE
		{
			get
			{
				return this._IMEICODE.Entity;
			}
			set
			{
				IMEICODE previousValue = this._IMEICODE.Entity;
				if (((previousValue != value) 
							|| (this._IMEICODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IMEICODE.Entity = null;
						previousValue.CHITIETPNs.Remove(this);
					}
					this._IMEICODE.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNs.Add(this);
						this._ID_IMEI = value.ID;
					}
					else
					{
						this._ID_IMEI = default(Nullable<int>);
					}
					this.SendPropertyChanged("IMEICODE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPN", Storage="_PHIEUNHAP", ThisKey="ID_PN", OtherKey="ID", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPNs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNs.Add(this);
						this._ID_PN = value.ID;
					}
					else
					{
						this._ID_PN = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENDANHMUC;
		
		private EntitySet<LOAISP> _LOAISPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENDANHMUCChanging(string value);
    partial void OnTENDANHMUCChanged();
    #endregion
		
		public DANHMUC()
		{
			this._LOAISPs = new EntitySet<LOAISP>(new Action<LOAISP>(this.attach_LOAISPs), new Action<LOAISP>(this.detach_LOAISPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANHMUC", DbType="NVarChar(50)")]
		public string TENDANHMUC
		{
			get
			{
				return this._TENDANHMUC;
			}
			set
			{
				if ((this._TENDANHMUC != value))
				{
					this.OnTENDANHMUCChanging(value);
					this.SendPropertyChanging();
					this._TENDANHMUC = value;
					this.SendPropertyChanged("TENDANHMUC");
					this.OnTENDANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_LOAISP", Storage="_LOAISPs", ThisKey="ID", OtherKey="IDDM")]
		public EntitySet<LOAISP> LOAISPs
		{
			get
			{
				return this._LOAISPs;
			}
			set
			{
				this._LOAISPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOAISPs(LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_LOAISPs(LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGIA")]
	public partial class DONGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_SP;
		
		private System.Nullable<double> _GIA;
		
		private System.Nullable<System.DateTime> _NGCAPNHAT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnNGCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGCAPNHATChanged();
    #endregion
		
		public DONGIA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGCAPNHAT
		{
			get
			{
				return this._NGCAPNHAT;
			}
			set
			{
				if ((this._NGCAPNHAT != value))
				{
					this.OnNGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGCAPNHAT = value;
					this.SendPropertyChanged("NGCAPNHAT");
					this.OnNGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONGIA", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DONGIAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DONGIAs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRTK")]
	public partial class GRTK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private string _CODEGR;
		
		private EntitySet<NHOMNGUOIDUNG> _NHOMNGUOIDUNGs;
		
		private EntitySet<QL_PHANQUYEN> _QL_PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnCODEGRChanging(string value);
    partial void OnCODEGRChanged();
    #endregion
		
		public GRTK()
		{
			this._NHOMNGUOIDUNGs = new EntitySet<NHOMNGUOIDUNG>(new Action<NHOMNGUOIDUNG>(this.attach_NHOMNGUOIDUNGs), new Action<NHOMNGUOIDUNG>(this.detach_NHOMNGUOIDUNGs));
			this._QL_PHANQUYENs = new EntitySet<QL_PHANQUYEN>(new Action<QL_PHANQUYEN>(this.attach_QL_PHANQUYENs), new Action<QL_PHANQUYEN>(this.detach_QL_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODEGR", DbType="Char(2)")]
		public string CODEGR
		{
			get
			{
				return this._CODEGR;
			}
			set
			{
				if ((this._CODEGR != value))
				{
					this.OnCODEGRChanging(value);
					this.SendPropertyChanging();
					this._CODEGR = value;
					this.SendPropertyChanged("CODEGR");
					this.OnCODEGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_NHOMNGUOIDUNG", Storage="_NHOMNGUOIDUNGs", ThisKey="ID", OtherKey="ID_GR")]
		public EntitySet<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this._NHOMNGUOIDUNGs;
			}
			set
			{
				this._NHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_QL_PHANQUYEN", Storage="_QL_PHANQUYENs", ThisKey="ID", OtherKey="ID_GRTK")]
		public EntitySet<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this._QL_PHANQUYENs;
			}
			set
			{
				this._QL_PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = this;
		}
		
		private void detach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = null;
		}
		
		private void attach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = this;
		}
		
		private void detach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENHANG;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    #endregion
		
		public HANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(20)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_SANPHAMs", ThisKey="ID", OtherKey="ID_HANG")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private System.Nullable<double> _DONGIA;
		
		private string _ID_KH;
		
		private string _ID_NV;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNGTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGTAOChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnID_KHChanging(string value);
    partial void OnID_KHChanged();
    partial void OnID_NVChanging(string value);
    partial void OnID_NVChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this.OnNGTAOChanging(value);
					this.SendPropertyChanging();
					this._NGTAO = value;
					this.SendPropertyChanged("NGTAO");
					this.OnNGTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="VarChar(10)")]
		public string ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="VarChar(10)")]
		public string ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID", OtherKey="ID_HD")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="ID_KH", OtherKey="ID", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_KH = value.ID;
					}
					else
					{
						this._ID_KH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="ID_NV", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_NV = value.ID;
					}
					else
					{
						this._ID_NV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMEICODE")]
	public partial class IMEICODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MA;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private string _ID_SP;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntitySet<CHITIETPN> _CHITIETPNs;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMAChanging(string value);
    partial void OnMAChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    #endregion
		
		public IMEICODE()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._CHITIETPNs = new EntitySet<CHITIETPN>(new Action<CHITIETPN>(this.attach_CHITIETPNs), new Action<CHITIETPN>(this.detach_CHITIETPNs));
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="VarChar(16)")]
		public string MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5)")]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMEICODE_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID", OtherKey="ID_IMEI")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMEICODE_CHITIETPN", Storage="_CHITIETPNs", ThisKey="ID", OtherKey="ID_IMEI")]
		public EntitySet<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this._CHITIETPNs;
			}
			set
			{
				this._CHITIETPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_IMEICODE", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.IMEICODEs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.IMEICODEs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.IMEICODE = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.IMEICODE = null;
		}
		
		private void attach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.IMEICODE = this;
		}
		
		private void detach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.IMEICODE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ID_TK;
		
		private System.Nullable<int> _DIEMTICHLUY;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    partial void OnDIEMTICHLUYChanging(System.Nullable<int> value);
    partial void OnDIEMTICHLUYChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15)")]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTICHLUY", DbType="Int")]
		public System.Nullable<int> DIEMTICHLUY
		{
			get
			{
				return this._DIEMTICHLUY;
			}
			set
			{
				if ((this._DIEMTICHLUY != value))
				{
					this.OnDIEMTICHLUYChanging(value);
					this.SendPropertyChanging();
					this._DIEMTICHLUY = value;
					this.SendPropertyChanged("DIEMTICHLUY");
					this.OnDIEMTICHLUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_KH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENLOAI;
		
		private System.Nullable<int> _IDDM;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnIDDMChanging(System.Nullable<int> value);
    partial void OnIDDMChanged();
    #endregion
		
		public LOAISP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._DANHMUC = default(EntityRef<DANHMUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDM", DbType="Int")]
		public System.Nullable<int> IDDM
		{
			get
			{
				return this._IDDM;
			}
			set
			{
				if ((this._IDDM != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDMChanging(value);
					this.SendPropertyChanging();
					this._IDDM = value;
					this.SendPropertyChanged("IDDM");
					this.OnIDDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="ID", OtherKey="ID_LOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_LOAISP", Storage="_DANHMUC", ThisKey="IDDM", OtherKey="ID", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.LOAISPs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.LOAISPs.Add(this);
						this._IDDM = value.ID;
					}
					else
					{
						this._IDDM = default(Nullable<int>);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENMH;
		
		private EntitySet<QL_PHANQUYEN> _QL_PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENMHChanging(string value);
    partial void OnTENMHChanged();
    #endregion
		
		public MANHINH()
		{
			this._QL_PHANQUYENs = new EntitySet<QL_PHANQUYEN>(new Action<QL_PHANQUYEN>(this.attach_QL_PHANQUYENs), new Action<QL_PHANQUYEN>(this.detach_QL_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMH", DbType="NVarChar(50)")]
		public string TENMH
		{
			get
			{
				return this._TENMH;
			}
			set
			{
				if ((this._TENMH != value))
				{
					this.OnTENMHChanging(value);
					this.SendPropertyChanging();
					this._TENMH = value;
					this.SendPropertyChanged("TENMH");
					this.OnTENMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_QL_PHANQUYEN", Storage="_QL_PHANQUYENs", ThisKey="ID", OtherKey="ID_MH")]
		public EntitySet<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this._QL_PHANQUYENs;
			}
			set
			{
				this._QL_PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ID_TK;
		
		private string _TINHTRANG;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15)")]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(50)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_NV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG")]
	public partial class NHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GR;
		
		private string _ID_TK;
		
		private EntityRef<GRTK> _GRTK;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GRChanging(int value);
    partial void OnID_GRChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    #endregion
		
		public NHOMNGUOIDUNG()
		{
			this._GRTK = default(EntityRef<GRTK>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_GR
		{
			get
			{
				return this._ID_GR;
			}
			set
			{
				if ((this._ID_GR != value))
				{
					if (this._GRTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GRChanging(value);
					this.SendPropertyChanging();
					this._ID_GR = value;
					this.SendPropertyChanged("ID_GR");
					this.OnID_GRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_NHOMNGUOIDUNG", Storage="_GRTK", ThisKey="ID_GR", OtherKey="ID", IsForeignKey=true)]
		public GRTK GRTK
		{
			get
			{
				return this._GRTK.Entity;
			}
			set
			{
				GRTK previousValue = this._GRTK.Entity;
				if (((previousValue != value) 
							|| (this._GRTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRTK.Entity = null;
						previousValue.NHOMNGUOIDUNGs.Remove(this);
					}
					this._GRTK.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNGs.Add(this);
						this._ID_GR = value.ID;
					}
					else
					{
						this._ID_GR = default(int);
					}
					this.SendPropertyChanged("GRTK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHOMNGUOIDUNG", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHOMNGUOIDUNGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNGs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private System.Nullable<double> _DONGIA;
		
		private EntitySet<CHITIETPN> _CHITIETPNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNGTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGTAOChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPNs = new EntitySet<CHITIETPN>(new Action<CHITIETPN>(this.attach_CHITIETPNs), new Action<CHITIETPN>(this.detach_CHITIETPNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this.OnNGTAOChanging(value);
					this.SendPropertyChanging();
					this._NGTAO = value;
					this.SendPropertyChanged("NGTAO");
					this.OnNGTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPN", Storage="_CHITIETPNs", ThisKey="ID", OtherKey="ID_PN")]
		public EntitySet<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this._CHITIETPNs;
			}
			set
			{
				this._CHITIETPNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_PHANQUYEN")]
	public partial class QL_PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GRTK;
		
		private string _ID_MH;
		
		private bool _COQUYEN;
		
		private EntityRef<GRTK> _GRTK;
		
		private EntityRef<MANHINH> _MANHINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GRTKChanging(int value);
    partial void OnID_GRTKChanged();
    partial void OnID_MHChanging(string value);
    partial void OnID_MHChanged();
    partial void OnCOQUYENChanging(bool value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public QL_PHANQUYEN()
		{
			this._GRTK = default(EntityRef<GRTK>);
			this._MANHINH = default(EntityRef<MANHINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GRTK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_GRTK
		{
			get
			{
				return this._ID_GRTK;
			}
			set
			{
				if ((this._ID_GRTK != value))
				{
					if (this._GRTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GRTKChanging(value);
					this.SendPropertyChanging();
					this._ID_GRTK = value;
					this.SendPropertyChanged("ID_GRTK");
					this.OnID_GRTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_MH
		{
			get
			{
				return this._ID_MH;
			}
			set
			{
				if ((this._ID_MH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MHChanging(value);
					this.SendPropertyChanging();
					this._ID_MH = value;
					this.SendPropertyChanged("ID_MH");
					this.OnID_MHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit NOT NULL")]
		public bool COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_QL_PHANQUYEN", Storage="_GRTK", ThisKey="ID_GRTK", OtherKey="ID", IsForeignKey=true)]
		public GRTK GRTK
		{
			get
			{
				return this._GRTK.Entity;
			}
			set
			{
				GRTK previousValue = this._GRTK.Entity;
				if (((previousValue != value) 
							|| (this._GRTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRTK.Entity = null;
						previousValue.QL_PHANQUYENs.Remove(this);
					}
					this._GRTK.Entity = value;
					if ((value != null))
					{
						value.QL_PHANQUYENs.Add(this);
						this._ID_GRTK = value.ID;
					}
					else
					{
						this._ID_GRTK = default(int);
					}
					this.SendPropertyChanged("GRTK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_QL_PHANQUYEN", Storage="_MANHINH", ThisKey="ID_MH", OtherKey="ID", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.QL_PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.QL_PHANQUYENs.Add(this);
						this._ID_MH = value.ID;
					}
					else
					{
						this._ID_MH = default(string);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENSP;
		
		private string _NSX;
		
		private string _HINHANH;
		
		private string _ID_LOAI;
		
		private System.Nullable<int> _ID_HANG;
		
		private EntitySet<CAUHINH> _CAUHINHs;
		
		private EntitySet<DONGIA> _DONGIAs;
		
		private EntitySet<IMEICODE> _IMEICODEs;
		
		private EntitySet<THONGKECMT> _THONGKECMTs;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnNSXChanging(string value);
    partial void OnNSXChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnID_HANGChanging(System.Nullable<int> value);
    partial void OnID_HANGChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CAUHINHs = new EntitySet<CAUHINH>(new Action<CAUHINH>(this.attach_CAUHINHs), new Action<CAUHINH>(this.detach_CAUHINHs));
			this._DONGIAs = new EntitySet<DONGIA>(new Action<DONGIA>(this.attach_DONGIAs), new Action<DONGIA>(this.detach_DONGIAs));
			this._IMEICODEs = new EntitySet<IMEICODE>(new Action<IMEICODE>(this.attach_IMEICODEs), new Action<IMEICODE>(this.detach_IMEICODEs));
			this._THONGKECMTs = new EntitySet<THONGKECMT>(new Action<THONGKECMT>(this.attach_THONGKECMTs), new Action<THONGKECMT>(this.detach_THONGKECMTs));
			this._HANG = default(EntityRef<HANG>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(MAX)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="NVarChar(30)")]
		public string NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="VarChar(50)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="VarChar(6)")]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HANG", DbType="Int")]
		public System.Nullable<int> ID_HANG
		{
			get
			{
				return this._ID_HANG;
			}
			set
			{
				if ((this._ID_HANG != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HANGChanging(value);
					this.SendPropertyChanging();
					this._ID_HANG = value;
					this.SendPropertyChanged("ID_HANG");
					this.OnID_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CAUHINH", Storage="_CAUHINHs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<CAUHINH> CAUHINHs
		{
			get
			{
				return this._CAUHINHs;
			}
			set
			{
				this._CAUHINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONGIA", Storage="_DONGIAs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<DONGIA> DONGIAs
		{
			get
			{
				return this._DONGIAs;
			}
			set
			{
				this._DONGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_IMEICODE", Storage="_IMEICODEs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<IMEICODE> IMEICODEs
		{
			get
			{
				return this._IMEICODEs;
			}
			set
			{
				this._IMEICODEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_THONGKECMT", Storage="_THONGKECMTs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<THONGKECMT> THONGKECMTs
		{
			get
			{
				return this._THONGKECMTs;
			}
			set
			{
				this._THONGKECMTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_HANG", ThisKey="ID_HANG", OtherKey="ID", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_HANG = value.ID;
					}
					else
					{
						this._ID_HANG = default(Nullable<int>);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_LOAISP", ThisKey="ID_LOAI", OtherKey="ID", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_LOAI = value.ID;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAUHINHs(CAUHINH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CAUHINHs(CAUHINH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_IMEICODEs(IMEICODE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_IMEICODEs(IMEICODE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_THONGKECMTs(THONGKECMT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_THONGKECMTs(THONGKECMT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _USERNAME;
		
		private System.Data.Linq.Binary _PW;
		
		private System.Nullable<bool> _HOATDONG;
		
		private EntitySet<THONGTINTAIKHOAN> _THONGTINTAIKHOANs;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<NHOMNGUOIDUNG> _NHOMNGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPWChanging(System.Data.Linq.Binary value);
    partial void OnPWChanged();
    partial void OnHOATDONGChanging(System.Nullable<bool> value);
    partial void OnHOATDONGChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._THONGTINTAIKHOANs = new EntitySet<THONGTINTAIKHOAN>(new Action<THONGTINTAIKHOAN>(this.attach_THONGTINTAIKHOANs), new Action<THONGTINTAIKHOAN>(this.detach_THONGTINTAIKHOANs));
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._NHOMNGUOIDUNGs = new EntitySet<NHOMNGUOIDUNG>(new Action<NHOMNGUOIDUNG>(this.attach_NHOMNGUOIDUNGs), new Action<NHOMNGUOIDUNG>(this.detach_NHOMNGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PW
		{
			get
			{
				return this._PW;
			}
			set
			{
				if ((this._PW != value))
				{
					this.OnPWChanging(value);
					this.SendPropertyChanging();
					this._PW = value;
					this.SendPropertyChanged("PW");
					this.OnPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOATDONG", DbType="Bit")]
		public System.Nullable<bool> HOATDONG
		{
			get
			{
				return this._HOATDONG;
			}
			set
			{
				if ((this._HOATDONG != value))
				{
					this.OnHOATDONGChanging(value);
					this.SendPropertyChanging();
					this._HOATDONG = value;
					this.SendPropertyChanged("HOATDONG");
					this.OnHOATDONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_THONGTINTAIKHOANs", ThisKey="ID", OtherKey="ID_TAIKHOAN")]
		public EntitySet<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this._THONGTINTAIKHOANs;
			}
			set
			{
				this._THONGTINTAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHOMNGUOIDUNG", Storage="_NHOMNGUOIDUNGs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this._NHOMNGUOIDUNGs;
			}
			set
			{
				this._NHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGKECMT")]
	public partial class THONGKECMT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOIDUNG;
		
		private string _ID_SP;
		
		private string _TenKH;
		
		private System.Nullable<System.DateTime> _NGGHI;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnNGGHIChanging(System.Nullable<System.DateTime> value);
    partial void OnNGGHIChanged();
    #endregion
		
		public THONGKECMT()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5)")]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGGHI", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGGHI
		{
			get
			{
				return this._NGGHI;
			}
			set
			{
				if ((this._NGGHI != value))
				{
					this.OnNGGHIChanging(value);
					this.SendPropertyChanging();
					this._NGGHI = value;
					this.SendPropertyChanged("NGGHI");
					this.OnNGGHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_THONGKECMT", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.THONGKECMTs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.THONGKECMTs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENNCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    #endregion
		
		public NCC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(60)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_ChiTietDonHang_khResult
	{
		
		private string _ID;
		
		private string _TenSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _Gia;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private string _NhanVien;
		
		public sp_ChiTietDonHang_khResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(MAX)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this._TenSP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this._SoLuong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this._Gia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this._NGTAO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVien", DbType="NVarChar(MAX)")]
		public string NhanVien
		{
			get
			{
				return this._NhanVien;
			}
			set
			{
				if ((this._NhanVien != value))
				{
					this._NhanVien = value;
				}
			}
		}
	}
	
	public partial class sp_AddAccResult
	{
		
		private string _Message;
		
		public sp_AddAccResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddAcc_KHResult
	{
		
		private string _Message;
		
		public sp_AddAcc_KHResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ChangeAccResult
	{
		
		private string _Message;
		
		public sp_ChangeAccResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class fn_PhanQuyenResult
	{
		
		private string _ID;
		
		private string _TENMH;
		
		private System.Nullable<bool> _COQUYEN;
		
		public fn_PhanQuyenResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMH", DbType="NVarChar(50)")]
		public string TENMH
		{
			get
			{
				return this._TENMH;
			}
			set
			{
				if ((this._TENMH != value))
				{
					this._TENMH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit")]
		public System.Nullable<bool> COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this._COQUYEN = value;
				}
			}
		}
	}
	
	public partial class sp_AddCauHinhResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _Message;
		
		public sp_AddCauHinhResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddSPResult
	{
		
		private string _Message;
		
		public sp_AddSPResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddHDResult
	{
		
		private string _Message;
		
		public sp_AddHDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddPNResult
	{
		
		private string _Message;
		
		public sp_AddPNResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(16)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
